/**
 * Custom colors for using with themes
 */

import { MD3DarkTheme, MD3LightTheme } from "react-native-paper";

const Colors = {
  light: {
    default: {
      primary: MD3LightTheme.colors.primary,
      onPrimary: MD3LightTheme.colors.onPrimary,
    },
    green: {
      primary: "rgb(0, 107, 94)",
      onPrimary: "rgb(255, 255, 255)",
      primaryContainer: "rgb(118, 248, 226)",
      onPrimaryContainer: "rgb(0, 32, 27)",
      secondary: "rgb(74, 99, 94)",
      onSecondary: "rgb(255, 255, 255)",
      secondaryContainer: "rgb(205, 232, 225)",
      onSecondaryContainer: "rgb(6, 32, 27)",
      tertiary: "rgb(68, 97, 121)",
      onTertiary: "rgb(255, 255, 255)",
      tertiaryContainer: "rgb(202, 230, 255)",
      onTertiaryContainer: "rgb(0, 30, 48)",
      error: "rgb(186, 26, 26)",
      onError: "rgb(255, 255, 255)",
      errorContainer: "rgb(255, 218, 214)",
      onErrorContainer: "rgb(65, 0, 2)",
      background: "rgb(250, 253, 251)",
      onBackground: "rgb(25, 28, 27)",
      surface: "rgb(250, 253, 251)",
      onSurface: "rgb(25, 28, 27)",
      surfaceVariant: "rgb(218, 229, 225)",
      onSurfaceVariant: "rgb(63, 73, 70)",
      outline: "rgb(111, 121, 118)",
      outlineVariant: "rgb(190, 201, 197)",
      shadow: "rgb(0, 0, 0)",
      scrim: "rgb(0, 0, 0)",
      inverseSurface: "rgb(45, 49, 48)",
      inverseOnSurface: "rgb(239, 241, 239)",
      inversePrimary: "rgb(85, 219, 198)",
      elevation: {
        level0: "transparent",
        level1: "rgb(238, 246, 243)",
        level2: "rgb(230, 241, 238)",
        level3: "rgb(223, 237, 234)",
        level4: "rgb(220, 236, 232)",
        level5: "rgb(215, 233, 229)",
      },
      surfaceDisabled: "rgba(25, 28, 27, 0.12)",
      onSurfaceDisabled: "rgba(25, 28, 27, 0.38)",
      backdrop: "rgba(41, 50, 48, 0.4)",
    },
  },
  dark: {
    default: {
      primary: MD3DarkTheme.colors.primary,
      onPrimary: MD3DarkTheme.colors.onPrimary,
    },
    green: {
      primary: "rgb(78, 218, 212)",
      onPrimary: "rgb(0, 55, 53)",
      primaryContainer: "rgb(0, 80, 77)",
      onPrimaryContainer: "rgb(112, 247, 240)",
      secondary: "rgb(176, 204, 201)",
      onSecondary: "rgb(27, 53, 51)",
      secondaryContainer: "rgb(50, 75, 74)",
      onSecondaryContainer: "rgb(204, 232, 229)",
      tertiary: "rgb(177, 201, 232)",
      onTertiary: "rgb(26, 50, 75)",
      tertiaryContainer: "rgb(49, 72, 98)",
      onTertiaryContainer: "rgb(209, 228, 255)",
      error: "rgb(255, 180, 171)",
      onError: "rgb(105, 0, 5)",
      errorContainer: "rgb(147, 0, 10)",
      onErrorContainer: "rgb(255, 180, 171)",
      background: "rgb(25, 28, 28)",
      onBackground: "rgb(224, 227, 226)",
      surface: "rgb(25, 28, 28)",
      onSurface: "rgb(224, 227, 226)",
      surfaceVariant: "rgb(63, 73, 72)",
      onSurfaceVariant: "rgb(190, 201, 199)",
      outline: "rgb(136, 147, 145)",
      outlineVariant: "rgb(63, 73, 72)",
      shadow: "rgb(0, 0, 0)",
      scrim: "rgb(0, 0, 0)",
      inverseSurface: "rgb(224, 227, 226)",
      inverseOnSurface: "rgb(45, 49, 49)",
      inversePrimary: "rgb(0, 106, 102)",
      elevation: {
        level0: "transparent",
        level1: "rgb(28, 38, 37)",
        level2: "rgb(29, 43, 43)",
        level3: "rgb(31, 49, 48)",
        level4: "rgb(31, 51, 50)",
        level5: "rgb(32, 55, 54)",
      },
      surfaceDisabled: "rgba(224, 227, 226, 0.12)",
      onSurfaceDisabled: "rgba(224, 227, 226, 0.38)",
      backdrop: "rgba(41, 50, 49, 0.4)",
    },
  },
};

export default Colors;
